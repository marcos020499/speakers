import * as React from 'react';
declare type Props = {
    index: number;
    width: number;
    height: number;
    direction: string;
    effect: string;
    children: React.ReactNode;
    onClick: () => {};
};
declare type State = {
    index: number;
    index3d: number;
    width: number;
    height: number;
    mouseXY: Array<number>;
    mouseDelta: Array<number>;
    distance: number;
    isMoved: boolean;
    isPressed: boolean;
    isHorizontal: boolean;
    is2dEffect: boolean;
    count: number;
    theta: number;
    radius: number;
    carousel: {
        translate: {
            x: number;
            y: number;
            z: number;
        };
        rotate: {
            x: number;
            y: number;
            z: number;
            deg: number;
        };
    };
    cells: Array<Cell>;
    children: Array<React.ReactNode>;
};
declare type Cell = {
    translate: {
        x: number;
        y: number;
        z: number;
    };
    rotate: {
        x: number;
        y: number;
        z: number;
        deg: number;
    };
    opacity: number;
    zIndex: number;
};
declare class Carousel extends React.Component<Props, State> {
    constructor(props: Props);
    componentDidMount(): void;
    prev: () => void;
    next: () => void;
    move: (params: {
        index: number;
        index3d: number;
    }) => void;
    getMoveIndex: (params: {
        target: string;
    }) => number;
    getIndex: () => number;
    dragCell: () => void;
    changeCell: (params: {
        target: string;
    }) => void;
    dragCarousel: () => void;
    changeCarousel: (params: {
        target: string;
    }) => void;
    handleMouseDown: (e: React.MouseEvent<any>) => void;
    handleClick: (e: React.MouseEvent<any>) => void;
    handleMouseMove: (e: {
        pageX: number;
        pageY: number;
    }) => void;
    handleMouseUp: () => void;
    render(): JSX.Element;
}
export default Carousel;

import * as ts from 'typescript';
import { AppOptions, NameType, ParsedLogic } from './types';
export declare function logicSourceToLogicType(logicSource: string, appOptions?: AppOptions): string;
export declare function sourceToSourceFile(sourceCode: string, filename?: string): ts.SourceFile;
export declare function programFromSource(sourceCode: string): ts.Program;
export declare function isKeaCall(node: ts.Node, checker: ts.TypeChecker): boolean;
export declare function getTypeNodeForDefaultValue(defaultValue: ts.Node, checker: ts.TypeChecker): ts.TypeNode;
export declare function getParameterDeclaration(param: ts.ParameterDeclaration): ts.ParameterDeclaration;
export declare const toSpaces: (key: any) => any;
export declare function getActionTypeCreator(parsedLogic: ParsedLogic): (actionName: any) => string;
export declare function cleanDuplicateAnyNodes(reducers: NameType[]): NameType[];
export declare function extractImportedActions(actionObjects: ts.Expression | ts.ObjectLiteralExpression, checker: ts.TypeChecker): {};
export declare function getLogicPathString(appOptions: AppOptions, fileName: string): string;

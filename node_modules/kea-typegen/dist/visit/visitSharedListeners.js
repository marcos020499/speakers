"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.visitSharedListeners = void 0;
const ts = require("typescript");
const ts_clone_node_1 = require("@wessberg/ts-clone-node");
function visitSharedListeners(type, inputProperty, parsedLogic) {
    const { checker } = parsedLogic;
    for (const property of type.getProperties()) {
        const name = property.getName();
        const value = property.valueDeclaration.initializer;
        if (value && ts.isFunctionLike(value)) {
            let typeNode;
            const firstParameter = value.parameters[0];
            if (firstParameter) {
                typeNode = ts_clone_node_1.cloneNode(checker.typeToTypeNode(checker.getTypeAtLocation(firstParameter), undefined, undefined));
            }
            parsedLogic.sharedListeners.push({
                name,
                payload: typeNode,
                action: ts.createTypeLiteralNode([
                    ts.createPropertySignature(undefined, ts.createIdentifier('type'), undefined, ts.createKeywordTypeNode(ts.SyntaxKind.StringKeyword), undefined),
                    ts.createPropertySignature(undefined, ts.createIdentifier('payload'), undefined, typeNode || ts.createKeywordTypeNode(ts.SyntaxKind.AnyKeyword), undefined),
                ]),
            });
        }
    }
}
exports.visitSharedListeners = visitSharedListeners;
//# sourceMappingURL=visitSharedListeners.js.map